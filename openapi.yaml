openapi: 3.0.1
info:
  version: 0.0.1
  title: Kela Smart Money api
# during dev, should point to your local machine
#host: localhost:10010
# basePath prefixes all resource paths 
#basePath: /
servers:
  - url: https://localhost:10010/v2
  - url: http://localhost:10010/v2
#schemes:
# tip: remove http to make production-grade
#  - http
#  - https
# format of bodies a client can send (Content-Type)
# format of the responses to the client (Accepts)
paths:
  /reimbursement:
    x-swagger-router-controller: reimbursement
    post:
      operationId: reimbursement
      tags:
      - reimbursement
      description: Request single reimbursement
      # used as the method name of the controller
      requestBody:
        required: true
        description: Parties involved with the decision
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReimbursementRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReimbursementResponse'
        # responses may fall through to errors
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /reimbursements:
    x-swagger-router-controller: reimbursement
    post:
      operationId: reimbursements
      tags:
      - reimbursements
      description: Request mass reimbursement
      # used as the method name of the controller
      requestBody:
        required: true
        description: Parties involved with the decision
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReimbursementsRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReimbursementsResponse'
        # responses may fall through to errors
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /reimbursementStatus:
    x-swagger-router-controller: reimbursement
    get:
      operationId: reimbursementStatus
      tags:
        - reimbursementStatus
      summary: Request for report the result of reimbursement
      description: Returns a report of reimbursements of each requested user account
      parameters:
      - name: therapists
        in: query 
        description: Therapists with reimbursement requests
        explode: true
        style: form
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Ssn'
      - name: clients
        in: query 
        description: Clients in reimbursement requests
        explode: true
        style: form
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Ssn'
      - name: dateRange
        description: Reimbursement report date range
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/DateRange'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReimbursementStatusResponse'
        # responses may fall through to errors
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /decision:
    # binds a127 app logic to a route
    x-swagger-router-controller: decision
    get:
      operationId: decision
      description: Returns decision information
      # used as the method name of the controller
      parameters:
      - in: query
        name: params
        explode: true
        description: Parameter sets for decisionId and therapyRelation
        schema:
          type: object
          anyOf:
          - required: [decisionId]
          - required: [threrapyRelation, dateTime]
          properties:
            decisionId:
              $ref: '#/components/schemas/Identifier'
            threrapyRelation:
              $ref: '#/components/schemas/TherapyRelation'
            dateTime:
              $ref: '#/components/schemas/DateTime'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
              # returns status 200, with empty content if not found
                $ref: '#/components/schemas/TherapyDecision'
        # responses may fall through to errors
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /decisions:
    # binds a127 app logic to a route
    x-swagger-router-controller: decision
    get:
      operationId: decisions
      description: Returns decision information
      # used as the method name of the controller
      parameters:
      - in: query
        name: params
        explode: true
        description: Either clientId of therapistId is required
        schema:
          type: object
          anyOf:
          - required: [clientId]
          - required: [therapistId]
          properties:
            clientId:
              type: string
            therapistId:
              type: string
            activeOnly: 
              type: boolean
              default: true
            dateRange:
              $ref: '#/components/schemas/DateRange'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TherapyDecision'
        # responses may fall through to errors
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /account:
    x-swagger-router-controller: account
    get:
      operationId: account
      description: create a new account
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccountResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post: 
      operationId: getAccount
      description: find account by personalId and therapy type
      requestBody:
        required: true
        description: Parties involved with the decision
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountData'
        # responses may fall through to errors
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /account/{accountId}:
    x-swagger-router-controller: account
    get:
      operationId: balance
      summary: retrieve account balance
      parameters:
      - in: path
        name: accountId
        description: Account identifier
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountData'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /person/{accountId}:
    x-swagger-router-controller: person
    get:
      operationId: person
      summary: retrieve personal data by account id
      parameters:
      - in: path
        name: accountId
        description: Account identifier
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonData'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /swagger:
    x-swagger-pipe: swagger_raw
components:
  schemas:
    AccountRequest:
      type: object
      required:
      - personalId
      - therapistId
      properties:
        personalId:
          $ref: '#/components/schemas/Ssn'
        therapistId:
          $ref: '#/components/schemas/Ssn'
    AccountData:
      type: object
      required:
        - balance
        - tokenType
        - tokenValue
      properties:
        balance:
          type: number
          format: integer
          multipleOf: 1
        tokenType:
          type: string
        # additional info to prestudy
        tokenValue:
          type: number
          format: double
          multipleOf: 0.01
        personalId:
          $ref: '#/components/schemas/Ssn'
        created:
          $ref: '#/components/schemas/DateTime'
    ReimbursementRequest:
      type: object
      required:
      - paymentRequestId
      - decisionId
      properties:
        paymentRequestId:
          $ref: '#/components/schemas/Identifier'
        decisionId:
          $ref: '#/components/schemas/Identifier'
    ReimbursementResponse:
      type: object
      required:
      - returnCode
      properties:
        #optional info, warning or error
        message:
          type: string
        returnCode:
          type: string
    ReimbursementsRequest:
      type: object
      required:
        - dateRange
      properties:
        dateRange:
          $ref: '#/components/schemas/DateRange'
        therapists:
          type: array
          items:
            $ref: '#/components/schemas/TherapistRequestListItem'
    ReimbursementsResponse:
      type: object
      required:
      - returnCode
      - reimbursedPaymentcount
      - failedPaymentCount
      properties:
        #optional info, warning or error
        message:
          type: string
        returnCode:
          type: string
        reimbursedPaymentcount:
          type: integer
        failedPaymentCount:
          type: integer
    ReimbursementStatusResponse:
      type: object
      required:
      - reimbursedPaymentcount
      - reimbursedAmount
      - disputedPaymentCount
      - disputedAmount
      - therapists
      properties:
        message:
          type: string
        # total count of successful reimbursements
        reimbursedPaymentcount:
          type: integer
        # total requested amount in euros
        reimbursedAmount:
          type: number
          format: double
          multipleOf: 0.01
        # total count of payments under dispute resolution
        disputedPaymentCount:
          type: integer
        # total amount under disputes in euros
        disputedAmount:
          type: number
          format: double
          multipleOf: 0.01
        therapists:
          type: array
          items:
            $ref: '#/components/schemas/TherapistListItem'
    ErrorResponse:
      #errorCode tai message pakollinen
      required:
      - status
      - errorCodes
      - message
      properties:
        status:
          type: integer
        errorCodes:
          type: array
          items:
            type: string
        message:
          type: string
        #can be replaced by error code
        decisionActive:
          type: boolean
    CreateAccountResponse:
      required:
        - accountId
      properties:
        status:
          type: string
        accountId:
          type: string
    TherapyDecision:
      type: object
      required:
      - id
      - therapyRelation
      - therapySessionsAvailable
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        therapyRelation:
          $ref: '#/components/schemas/TherapyRelation'
        therapySessionsAvailable:
          type: integer
        therapyType: 
          type: string
        active:
          type: boolean
        validTime:
          $ref: '#/components/schemas/DateRange'
    TherapyRelation:
      type: object
      required:
      - therapistId
      - clientId
      properties:
        therapistId:
          $ref: '#/components/schemas/Ssn'
        clientId:
          $ref: '#/components/schemas/Ssn'
    TherapySession:
      description: A session to be reimbursed, status is consequential except disputed can be altered and re-settled or cancelled
      type: object
      required:
      - therapyType
      - start
      - hours
      properties:
        decisionId:
          $ref: '#/components/schemas/Identifier'
        therapyType: 
          $ref: '#/components/schemas/TherapyType'
        start:
          $ref: '#/components/schemas/DateTime'
        hours:
          type: integer
          minimum: 1
          maximum: 2
        paymentRequestId:
          $ref: '#/components/schemas/Identifier'
        status:
          type: string
          enum: [initial, reserved, paymentRequested, settled, reimbursed, disputed, altered, canceled]
    Therapist:
      type: object
      required:
      - personalId
      - name
      - businessId
      - hourRate
      - therapyTypes
      properties:
        personalId:
          $ref: '#/components/schemas/Ssn'
        name:
          type: string
        businessId:
          $ref: '#/components/schemas/BusinessId'
        agency:
          $ref: '#/components/schemas/Agency'
        hourRate:
          type: number
          format: double
          multipleOf: 0.01
        therapyTypes:
          type: array
          items:
            $ref: '#/components/schemas/TherapyType'
    PersonData:
      type: object
      required:
      - personalId
      - name
      properties:
        personalId:
          $ref: '#/components/schemas/Ssn'
        name:
          type: string
        role:
          type: string
          enum: [client, therapist]
    TherapistRequestListItem:
      type: object
      required:
      - therapistId
      properties:
        terapistId:
          $ref: '#/components/schemas/Ssn'
        clients:
          type: array
          items:
            $ref: '#/components/schemas/TherapyClientRequestListItem'
    TherapistListItem:
      type: object
      required:
      - therapist
      - clients
      properties:
        terapist:
          $ref: '#/components/schemas/Therapist'
        clients:
          type: array
          items:
            $ref: '#/components/schemas/TherapyClientListItem'
    TherapyClient:
      type: object
      required:
      - personData
      properties:
        PersonData:
          $ref: '#/components/schemas/PersonData'
    TherapyClientRequestListItem:
      type: object
      required:
      - personalId
      properties:
        personalId:
          $ref: '#/components/schemas/Ssn'
        therapySessions:
          type: array
          items:
            $ref: '#/components/schemas/TherapySession'
    TherapyClientListItem:
      type: object
      required:
      - client
      - therapySessions
      properties:
        client:
          $ref: '#/components/schemas/TherapyClient'
        therapySessions:
          type: array
          items:
            $ref: '#/components/schemas/TherapySession'
    TherapyType: 
      type: string
      enum: [Y, P, E, R, M, O]
    Agency:
      type: object
      properties:
        name:
          type: string
        businessId:
          $ref: '#/components/schemas/BusinessId'
    Ssn:
      type: string
      pattern: '^\d{6}[A-]\d{3}[a-zA-Z0-9]$'
    BusinessId:
      type: string
      pattern: '^[0-9]{7}\\-[0-9]{1}'
    Identifier:
      type: string
      format: uuid
    DateRange:
      type: object
      required:
      - startDate
      - endDate
      properties:
        startDate:
          $ref: '#/components/schemas/Date'
        endDate:
          $ref: '#/components/schemas/Date'
    Date: 
      type: string
      format: date
    DateTime: 
      type: string
      format: datetime
