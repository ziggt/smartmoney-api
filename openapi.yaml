openapi: 3.0.1
info:
  version: 0.0.1
  title: Smart Money api
  description: >
    API to process payments to service providers of benefit customers as redeemable vouchers.
    Methods provided are for getting benefit decisions and applying and querying reimbursements for vouchers.
# during dev, should point to your local machine
servers:
  - url: https://localhost:10010/v2
  - url: http://localhost:10010/v2
paths:
  /reimbursement:
    # binds a127 app logic to a route
    x-swagger-router-controller: reimbursement
    post:
      operationId: reimbursement
      tags:
      - reimbursement
      summary: Performs single payment reimbursement
      description: >
        Request single reimbursement of a settled payment request.
        Return value contains return code to indicate the type of success or error and an optional message.
      requestBody:
        required: true
        description: Id and related decision id of the payment request to be reimbursed.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReimbursementRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReimbursementResponse'
        # responses may fall through to errors
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /reimbursements:
    x-swagger-router-controller: reimbursement
    post:
      operationId: reimbursements
      tags:
      - reimbursements
      summary: Request mass reimbursement
      description: >
        Request for a multiple payments reimbursement by date 
        or by individual therapy relations and individual sessions.
        Response indicates successful and failed (disputed) payment counts.
        Use reimbursementStatus to see the results of the asynchronous process.
      requestBody:
        required: true
        description: >
          Mass reimbursement by date range and optionally by a list of therapy relations
          with either all therapy sessions of selected therapist, or all sessions of therapy relations
          or individually given therapy sessions within therapy relations.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReimbursementsRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReimbursementsResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /reimbursementStatus:
    x-swagger-router-controller: reimbursement
    get:
      operationId: reimbursementStatus
      tags:
        - reimbursementStatus
      summary: Request for report of payments reimbursed, disputed or waiting for a reimbursement
      description: >
        Returns a report of reimbursements of either all user accounts or each specified 
        therapist and/or client.
        The statuses are listed by therapists each containing list of clients under which the list of 
        therapySession info with corresponding payment request id and status are contained.
        Therapists are listed also when only clientId(s) are given and all clients are listed if only 
        therapists are given.
      parameters:
      - name: dateRange
        description: Reimbursement report date range
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/DateRange'
      - name: therapists
        in: query 
        description: Therapist ids with reimbursement requests
        explode: true
        style: form
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Ssn'
      - name: clients
        in: query 
        description: Client ids in reimbursement requests
        explode: true
        style: form
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Ssn'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReimbursementStatusResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /decision:
    x-swagger-router-controller: decision
    get:
      operationId: decision
      summary: Returns decision information
      description: >
        Response contains the given decision's id, date range and therapy relation
        (both therapist and client personal ids), therapy type and a value to indicate whether 
        the decision is still active (i.e. in case of therapist change during initial decision).
        When using therapy relation only, an active decision or empty response is returned.
        Given date specifies that a decision containing it is returned 
        (or empty data if no decision is found).
        If a no longer valid decision (therapist change) and a new decision both contain the 
        given date, active one is returned.
        If no decision is found, an empty content with status 200 is returned.
      parameters:
      - in: query
        name: params
        explode: true
        description: >
          Either decision id or therapy relation is mandatory as parameters.
          Date value is to be used with therapyRelation to define a date within a decision's range.
        schema:
          type: object
          anyOf:
          - required: [decisionId]
          - required: [threrapyRelation]
          properties:
            decisionId:
              $ref: '#/components/schemas/Identifier'
            threrapyRelation:
              $ref: '#/components/schemas/TherapyRelation'
            date:
              $ref: '#/components/schemas/Date'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TherapyDecision'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /decisions:
    x-swagger-router-controller: decision
    get:
      operationId: decisions
      summary: Returns all decisions of given information
      description: >
        Returns all decisions of give therapists and/or clients optionally limited by date range.
        Default is returning only currently active decisions unless parameter active is false.
      parameters:
      - in: query
        name: params
        explode: true
        description: >
          Either clientId or therapistId is required. 
          Date range optionally restricts results by returning only those decisions 
          that are currently active and within given date range.
          If parameter active is given with value false, all non-active decisions are included as well.
        schema:
          type: object
          anyOf:
          - required: [clientId]
          - required: [therapistId]
          properties:
            clientId:
              $ref: '#/components/schemas/Ssn'
            therapistId:
              $ref: '#/components/schemas/Ssn'
            activeOnly: 
              type: boolean
              default: true
            dateRange:
              $ref: '#/components/schemas/DateRange'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TherapyDecision'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /paymentRequest:
    x-swagger-router-controller: account
    get:
      operationId: getPaymentRequest
      summary: Returns a payment request
      description: >
        Returns a payment request by either with its direct id or therapy relation or 
        decisionId and therapy session date.
        If no payment request is found, an empty response with status 200 is returned.
      parameters:
      - in: query
        name: params
        description: >
          Either use paymentRequestId or parameter sets of session date with either 
          decisionId or both clientId and therapistId.
        explode: true
        schema:
          type: object
          anyOf:
          - required: [paymentRequestId]
          - required: [decisionId, sessionDate]
          - required: [therapyRelation, sessionDate]
          properties:
            paymentRequestId:
              $ref: '#/components/schemas/Identifier'
            decisionId:
              $ref: '#/components/schemas/Identifier'
            therapyRelation:
              $ref: '#/components/schemas/TherapyRelation'
            sessionDate:
              $ref: '#/components/schemas/Date'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentRequestResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: requestPayment
      summary: Initiates a new payment request
      description: >
        Returns the id of the generated payment request.
        Mandatory parameters are account ids of payer and receiver, session date and session count, 
        as well as either decision id or therapy type.
        Can be used as a reservation only with corresponding boolean flag parameter.
        Duplicate payment request for a therapy session (same date with previous) causes an error.
        Also if there is no active decision with given parameters within previous 2 months, 
        an error is returned.
      requestBody:
        required: true
        description: >
          Request a new payment for a therapy session.
          If the session is double-length, a single payment request with sessionCount 2 is expected.
          If the therapy session (payment) is reserved, not yet requested, set useAsReservation to true.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPaymentRequest'
      responses:
        200:
          description: Success, paymentRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identifier'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Send a reserved therapy session payment request
      description: >
        Updates an initially reserved therapy session payment request to a regular one and 
        sends it to the recipient. Uses the id of existing payment request.
      operationId: requestReservedSessionPayment
      requestBody:
        required: true
        description: Request a new payment for a therapy session with previously saved payment request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Identifier'
      responses:
        200:
          description: Success, paymentRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identifier'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      summary: Marks the given settled paymentRequest as disputed.
      description: >
        Sets the state of the given payment request to disputed when it appears as failed payment
        in reimbursement reports.
        Currently a disputed payment request cannot be undisputed and the client and therapy agency must resolve 
        the issue externally.
      operationId: disputeSettledPaymentRequest
      parameters:
      - in: query
        required: true
        name: paymentRequestId
        description: PaymentRequestId of the payment request to be disputed
        schema:
          $ref: '#/components/schemas/Identifier'
      responses:
        200:
          description: Success, paymentRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identifier'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /account:
    x-swagger-router-controller: account
    get: 
      operationId: getAccount
      summary: Returns the account info by therapy relation
      description: >
        Returns account by personalId, therapist id and user role.
        Can return expired accounts with parameter active set to false.
      parameters:
      - name: params
        description: Parties involved in a therapy decision
        in: query 
        explode: true
        schema:
          $ref: '#/components/schemas/AccountRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountData'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createAccount
      summary: Create a new account
      description: Currently therapy agency account generation requires personal id.
      requestBody:
        required: true
        description: Currently personal id to be linked with the account. In future some other type of id.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
      responses:
        200:
          description: Success, created account id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccountResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /account/{accountId}:
    x-swagger-router-controller: account
    get:
      operationId: getAccountById
      summary: retrieve account balance
      parameters:
      - in: path
        name: accountId
        description: Account identifier
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountData'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /person/{accountId}:
    x-swagger-router-controller: person
    get:
      operationId: person
      summary: Retrieve personal data by account id
      parameters:
      - in: path
        name: accountId
        description: Account identifier
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonData'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /swagger:
    x-swagger-pipe: swagger_raw
components:
  schemas:
    CreateAccountRequest:
      type: object
      required:
      - personalId
      - role
      properties:
        personalId:
          $ref: '#/components/schemas/Ssn'
        role:
          $ref: '#/components/schemas/AgencyRole'
    CreateAccountResponse:
      required:
        - accountId
      properties:
        status:
          type: string
        accountId:
          type: string
    AccountRequest:
      type: object
      required:
      - personalId
      - therapistId
      - role
      properties:
        personalId:
          $ref: '#/components/schemas/Ssn'
        therapistId:
          $ref: '#/components/schemas/Ssn'
        role:
          $ref: '#/components/schemas/PersonRole'
        active:
          type: boolean
          default: true
    AccountData:
      type: object
      required:
        - balance
        - tokenType
        - tokenValue
      properties:
        balance:
          type: number
          format: integer
          multipleOf: 1
        tokenType:
          type: string
        # additional info to prestudy
        tokenValue:
          type: number
          format: double
          multipleOf: 0.01
        personalId:
          $ref: '#/components/schemas/Ssn'
        decisionId:
          $ref: '#/components/schemas/Identifier'
        active:
          type: boolean
        created:
          $ref: '#/components/schemas/DateTime'
    NewPaymentRequest:
      description: >
        Request for a new payment. Optionally required decisionId or therapy type. 
        Optional useAsReservation can be used to reserve therapy session but not request the payment yet.
        Session date, if after decision end, must be within 2 months of after end date.
        Therapy type is a coded or abbreviated value
      type: object
      anyOf:
      - required: [decisionId]
      - required: [therapyType]
      required:
      - receiverAccountId
      - payerAccountId
      - sessionDate
      - sessionCount
      properties:
        receiverAccountId:
          $ref: '#/components/schemas/Identifier'
        payerAccountId:
          $ref: '#/components/schemas/Identifier'
        sessionDate:
          $ref: '#/components/schemas/Date'
        decisionId:
          $ref: '#/components/schemas/Identifier'
        sessionCount:
          $ref: '#/components/schemas/SessionCount'
        therapyType:
          $ref: '#/components/schemas/TherapyType'
        useAsReservation:
          description: When true, sets the initial state of the request to reserved.
          type: boolean
          default: false
    PaymentRequestResponse:
      description: Payment request information.
      type: object
      required:
      - id
      - receiverAccountId
      - payerAccountId
      - therapySession
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        receiverAccountId:
          $ref: '#/components/schemas/Identifier'
        payerAccountId:
          $ref: '#/components/schemas/Identifier'
        therapySession:
          $ref: '#/components/schemas/TherapySession'
    ReimbursementRequest:
      type: object
      required:
      - paymentRequestId
      - decisionId
      properties:
        paymentRequestId:
          $ref: '#/components/schemas/Identifier'
        decisionId:
          $ref: '#/components/schemas/Identifier'
    ReimbursementResponse:
      type: object
      required:
      - returnCode
      properties:
        #optional info, warning or error
        message:
          type: string
        returnCode:
          type: string
    ReimbursementsRequest:
      type: object
      required:
        - dateRange
      properties:
        dateRange:
          $ref: '#/components/schemas/DateRange'
        therapists:
          type: array
          items:
            $ref: '#/components/schemas/TherapistRequestListItem'
    ReimbursementsResponse:
      description: >
        Return code indicates the overall state of the reimbursement and must be agreed on.
        Message can contain any info, warning or error.
        Failed payment count indicates the amount of disputed payment requests
        in case they were selected in the reimburse request.
      type: object
      required:
      - returnCode
      - reimbursedPaymentCount
      - failedPaymentCount
      properties:
        #optional info, warning or error
        message:
          type: string
        returnCode:
          type: string
        reimbursedPaymentCount:
          type: integer
        failedPaymentCount:
          type: integer
    ReimbursementStatusResponse:
      type: object
      required:
      - reimbursedPaymentcount
      - reimbursedAmount
      - disputedPaymentCount
      - disputedAmount
      - therapists
      properties:
        message:
          type: string
        # total count of successful reimbursements
        reimbursedPaymentcount:
          type: integer
        # total requested amount in euros
        reimbursedAmount:
          type: number
          format: double
          multipleOf: 0.01
        # total count of payments under dispute resolution
        disputedPaymentCount:
          type: integer
        # total amount under disputes in euros
        disputedAmount:
          type: number
          format: double
          multipleOf: 0.01
        therapists:
          type: array
          items:
            $ref: '#/components/schemas/TherapistListItem'
    ErrorResponse:
      #errorCode tai message pakollinen
      required:
      - status
      - errorCodes
      - message
      properties:
        status:
          type: integer
        errorCodes:
          type: array
          items:
            type: string
        message:
          type: string
        #can be replaced by error code
        decisionActive:
          type: boolean
    TherapyDecision:
      type: object
      required:
      - id
      - therapyRelation
      - therapySessionsAvailable
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        therapyRelation:
          $ref: '#/components/schemas/TherapyRelation'
        therapySessionsAvailable:
          type: integer
        therapyType: 
          type: string
        active:
          type: boolean
        validTime:
          $ref: '#/components/schemas/DateRange'
    TherapyRelation:
      type: object
      required:
      - therapistId
      - clientId
      properties:
        therapistId:
          $ref: '#/components/schemas/Ssn'
        clientId:
          $ref: '#/components/schemas/Ssn'
    TherapySession:
      description: >
        A session to be reimbursed, status is consequential except for reimbursed and disputed 
        which are alternative end statuses.
      type: object
      required:
      - decisionId
      - therapyType
      - date
      - sessionCount
      properties:
        decisionId:
          $ref: '#/components/schemas/Identifier'
        therapyType: 
          $ref: '#/components/schemas/TherapyType'
        date:
          $ref: '#/components/schemas/Date'
        sessionCount:
          $ref: '#/components/schemas/SessionCount'
        paymentRequestId:
          $ref: '#/components/schemas/Identifier'
        status:
          type: string
          enum: [sessionReserved, paymentRequested, settled, reimbursed, disputed]
    Therapist:
      type: object
      required:
      - personalId
      - name
      - businessId
      - hourRate
      - therapyTypes
      properties:
        personalId:
          $ref: '#/components/schemas/Ssn'
        name:
          type: string
        businessId:
          $ref: '#/components/schemas/BusinessId'
        agency:
          $ref: '#/components/schemas/Agency'
        hourRate:
          type: number
          format: double
          multipleOf: 0.01
        therapyTypes:
          type: array
          items:
            $ref: '#/components/schemas/TherapyType'
    PersonData:
      type: object
      required:
      - personalId
      - name
      properties:
        personalId:
          $ref: '#/components/schemas/Ssn'
        name:
          type: string
        role:
          $ref: '#/components/schemas/PersonRole'
    PersonRole:
      type: string
      enum: [client, therapist, agency]
    AgencyRole:
      type: string
      enum: [therapist, agency]
    TherapistRequestListItem:
      type: object
      required:
      - therapistId
      properties:
        terapistId:
          $ref: '#/components/schemas/Ssn'
        clients:
          type: array
          items:
            $ref: '#/components/schemas/TherapyClientRequestListItem'
    TherapistListItem:
      type: object
      required:
      - therapist
      - clients
      properties:
        terapist:
          $ref: '#/components/schemas/Therapist'
        clients:
          type: array
          items:
            $ref: '#/components/schemas/TherapyClientListItem'
    TherapyClient:
      type: object
      required:
      - personData
      properties:
        PersonData:
          $ref: '#/components/schemas/PersonData'
    TherapyClientRequestListItem:
      type: object
      required:
      - personalId
      properties:
        personalId:
          $ref: '#/components/schemas/Ssn'
        therapySessions:
          type: array
          items:
            $ref: '#/components/schemas/TherapySession'
    TherapyClientListItem:
      type: object
      required:
      - client
      - therapySessions
      properties:
        client:
          $ref: '#/components/schemas/TherapyClient'
        therapySessions:
          type: array
          items:
            $ref: '#/components/schemas/TherapySession'
    TherapyType: 
      type: string
      enum: [YKS, PAR, PER, RYH, MUS, OHJ]
    SessionCount:
      type: integer
      minimum: 1
      maximum: 2
    Agency:
      type: object
      properties:
        name:
          type: string
        businessId:
          $ref: '#/components/schemas/BusinessId'
    Ssn:
      type: string
      pattern: '^\d{6}[A-]\d{3}[a-zA-Z0-9]$'
    BusinessId:
      type: string
      pattern: '^[0-9]{7}\\-[0-9]{1}'
    Identifier:
      type: string
      format: uuid
    DateRange:
      type: object
      required:
      - startDate
      - endDate
      properties:
        startDate:
          $ref: '#/components/schemas/Date'
        endDate:
          $ref: '#/components/schemas/Date'
    Date: 
      type: string
      format: date
    DateTime: 
      type: string
      format: date-time
